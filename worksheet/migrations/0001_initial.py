# Generated by Django 4.2.6 on 2023-10-21 15:57

import ckeditor.fields
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student', '0002_registrationdate'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=31, null=True)),
                ('q_no', models.PositiveIntegerField(verbose_name='Question no.')),
                ('question', ckeditor.fields.RichTextField()),
                ('difficulty', models.SmallIntegerField(choices=[(-1, 'Easy'), (0, 'Medium'), (1, 'Hard')], default=0, null=True)),
                ('explanation', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worksheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('standard', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12')], null=True)),
                ('instructions', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=10000)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('educator_feedback', models.TextField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('isDraft', models.BooleanField(default=False)),
                ('classroom', models.ManyToManyField(blank=True, to='student.classroom')),
            ],
            options={
                'verbose_name_plural': 'Worksheets',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.DateTimeField(auto_now_add=True, null=True)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_submission', to='student.student')),
                ('worksheet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='worksheet.worksheet')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('final_answer', models.TextField(blank=True, null=True)),
                ('solution_steps', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worksheet.question')),
            ],
        ),
        migrations.CreateModel(
            name='Response_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_attempts', models.PositiveIntegerField(default=0, verbose_name='total_attempts')),
                ('custom_answers', jsonfield.fields.JSONField(blank=True, help_text='\n            This is a JSON field to store custom answers entered by the student wherever custom input is possible. <br />\n            Use the <i>Question ID</i> as key and <i>answer marked</i> as the value pair. <br />\n            Whenever such a question is encountered, the value in option text (opt_text) will get replaced by the value in answer marked. \n            ', null=True, verbose_name='Custom Answers')),
                ('time_stats', jsonfield.fields.JSONField(blank=True, help_text='\n            This is a JSON Field to store time spent in each question by the student. <br />\n            ', null=True, verbose_name='Time spent in each question')),
                ('response_behaviour', jsonfield.fields.JSONField(blank=True, help_text='\n\n        This is a json field to store the boolean value of explaination and hint in each question by the student\n    ', null=True, verbose_name='Track the behaviour of student in each question')),
                ('marks_obtained', models.FloatField(default=0, help_text='\n            total marks_obtained of student for current submission.\n        ', null=True, verbose_name='Marks obtained')),
                ('performance', models.SmallIntegerField(blank=True, choices=[(0, 'Needs improvement'), (1, 'Good'), (2, 'Excellent')], default=1, help_text='\n            The overall performance of the student in the quiz. <br />\n            <b>0</b> Needs improvement <br />\n            <b>1</b> Good <br />\n            <b>2</b> Excellent <br />\n            ', null=True, verbose_name='Performance of the Student')),
                ('responses', models.ManyToManyField(to='worksheet.solution', verbose_name='Responses')),
                ('student_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_response', to='student.student')),
                ('worksheet_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='worksheet.worksheet', verbose_name='Assignment ID')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='worksheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worksheet.worksheet'),
        ),
    ]
